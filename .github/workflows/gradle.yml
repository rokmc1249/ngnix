name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]


env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  S3_BUCKET_NAME: ${{ secrets.AWS_SECRET_BUCKET }}
  CODE_DEPLOY_APPLICATION_NAME: cicd-test-CD
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: cicd-test-CD-group


permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest



    steps:
      - name: Checkout
        uses: actions/checkout@v3


      
      - uses: actions/checkout@v3
      - run: touch ./src/main/resources/application.properties
      - run: echo "${{secrets.APPLICATION}}" > ./src/main/resources/application.properties
      - run: cat ./src/main/resources/application.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew build -x test
        shell: bash

      - name: Make zip file
        run: zip -r ./code-deploy.zip ./build/libs/*.jar ./scripts/* -j ./appspec.yml
        shell: bash



      # (4) AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # (5) 빌드 결과물을 S3 버킷에 업로드
      - name: Upload to AWS S3
        run: aws s3 cp --region ${{ secrets.AWS_REGION }} ./GITHUB_SHA.zip s3://codesucket/GITHUB_SHA.zip

      # (6) S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

        run: aws deploy create-deployment
          --application-name cicd-test-CD
          --deployment-config-name CodeDeployDefault.OneAtATime
          --deployment-group-name cicd-test-CD-group
          --file-exists-behavior OVERWRITE
          --s3-location bucket=codesucket,bundleType=zip,key=GITHUB_SHA.zip